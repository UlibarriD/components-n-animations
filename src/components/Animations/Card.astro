---
interface Props {
  title: string;
  categorys: string[];
  object: boolean;
  text: boolean;
  url: string;
}

const { title, categorys, object, text, url } = Astro.props;
---

<article>
  <a href={url} class="animations-card">
    {object && <div class={`box ${title}`} id={`${title}`} />}
    {
      text && (
        <span class="text" id={`${title}`}>
          Create
        </span>
      )
    }

    <div class="info-animation">
      <h4>{title}</h4>
      <ul>
        {categorys.map((category) => <li>{category}</li>)}
      </ul>
    </div>
  </a>
</article>

<style>
  a {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem 1rem;
    border: 1px solid rgba(39, 85, 89, 1);
    border-radius: 8px;
    gap: 2rem;
    height: fit-content;
    cursor: pointer;
    background: rgba(39, 85, 89, 0.15);
    transition: border 0.3s;
  }
  a:hover {
    border: 1px solid rgb(55, 110, 115);
  }
  .box {
    width: 150px;
    height: 150px;
    border-radius: 8px;
    box-shadow: -2px 4px 8px rgba(0, 0, 0, 0.3);
    background-color: #275559;
  }
  h4 {
    font-size: 1.25rem;
    font-weight: 500;
  }

  .info-animation {
    width: 100%;
  }
  ul {
    margin-top: 0.7rem;
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
  }
  li {
    /* background-color: rgb(89, 196, 175); */
    color: rgb(89, 196, 175);
    border: 1px solid rgb(55, 110, 115);
    border-radius: 8px;
    list-style: none;
    padding: 0.35rem 0.75rem;
  }
</style>
